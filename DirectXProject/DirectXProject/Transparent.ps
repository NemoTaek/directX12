Texture2D shaderTexture;
SamplerState SampleType;

cbuffer TranslationBuffer
{
	float textureTranslation;	// 0~1 사이의 값으로 텍스처 이동 위치 갱신
};

cbuffer TransparentBuffer
{
	float blendAmount;	// 0~1 사이의 값으로 텍스처를 블렌딩 할 비율을 설정
};

struct PixelInputType
{
	float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
	// float clip : SV_ClipDistance0;
};

float4 TransparentPixelShader(PixelInputType input) : SV_TARGET
{
	float4 color;

	// 픽셀을 샘플링하는 위치를 변환
	// input.tex.x += textureTranslation;
	// input.tex.y += textureTranslation;

	color = shaderTexture.Sample(SampleType, input.tex);

	// 이 픽셀의 알파 값을 설정하여 블렌딩 효과 생성
	color.a = blendAmount;

	return color;
}