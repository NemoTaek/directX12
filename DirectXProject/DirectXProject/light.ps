Texture2D shaderTexture;	// 텍스쳐 자원으로써 모델에 텍스쳐를 그릴 때 사용한다.
SamplerState SampleType;	// 텍스쳐 자원에서 표본을 추출할 때 어떤 필터링 방식과 좌표 지정모드를 적용할 것인지를 표본추출기로 지정한다.

cbuffer LightBuffer
{
	float4 diffuseColor;	// 분산조명
	float3 lightDirection;	// 빛 방향
	float padding;
};


// Typedefs

struct PixelInputType
{
	float4 position : SV_POSITION;
	// float4 color : COLOR;
	float2 tex : TEXCOORD0;
	float3 normal : NORMAL;
};

// Pixel Shader

float4 LightPixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;
	float3 lightDir;
	float lightIntensity;
	float4 color;

	// 이 텍스쳐 좌표 위치에서 샘플러를 사용하여 텍스쳐에서 픽셀 색상을 샘플링
	textureColor = shaderTexture.Sample(SampleType, input.tex);

	// 빛 벡터는 입사광 진행방향과 반대이다
	lightDir = -lightDirection;

	// 픽셀의 빛의 양 계산
	lightIntensity = saturate(dot(input.normal, lightDir));

	// 빛의 강도와 결합된 분산조명 색을 기준으로 최종 색상을 계산
	color = saturate(diffuseColor * lightIntensity);
	color = color * textureColor;

	return color;
}