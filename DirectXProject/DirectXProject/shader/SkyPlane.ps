Texture2D cloudTexture : register(t0);
Texture2D perturbTexture : register(t1);	// 노이즈 텍스쳐, perturb: 교란시키다
SamplerState SampleType;

cbuffer SkyBuffer
{
	float translation;
	float scale;
	float brightness;
	float padding;
}

struct PixelInputType
{
	float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
};

float4 SkyPlanePixelShader(PixelInputType input) : SV_TARGET
{
	float4 perturbValue;	// 교란 값
	float4 color;

	input.tex.x = input.tex.x + translation;
	
	perturbValue = perturbTexture.Sample(SampleType, input.tex);
	perturbValue = perturbValue * scale;
	perturbValue.xy = perturbValue.xy + input.tex.xy + translation;

	color = cloudTexture.Sample(SampleType, perturbValue.xy);
	
	// 밝기 값에 따라 구름 텍스처의 밝기 설정
	color = color * brightness;

	return color;
}